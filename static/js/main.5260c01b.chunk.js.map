{"version":3,"sources":["Components/ProductList/ProductCard.jsx","Components/ProductList/ProductList.jsx","Assets/trash-alt-regular.svg","Components/Cart/CartProductView.jsx","Components/Cart/Cart.jsx","Components/Navbar/NavbarItems.jsx","Assets/shopping-basket-solid.svg","Assets/round.svg","Components/Navbar/Navbar.jsx","Components/Credits/Credits.jsx","Components/LoginForm/CartInformation.jsx","Components/LoginForm/LoginForm.jsx","Components/ThankYou/ThankYou.jsx","App.js","index.js"],"names":["ProductCard","item","addToCartHandler","className","src","imgSrc","alt","title","text","price","toFixed","onClick","footer","ProductList","props","productData","items","map","id","CartProductView","increaseItemAmount","decreaseItemAmount","amount","TrashCan","Cart","cartList","setCartList","calcTotalPrice","list","total","forEach","TotalAndCheckout","to","length","cartItems","setCartItems","NavbarItems","urlPath","Navbar","customer","setCustomer","location","useLocation","isLoggedIn","person","Object","entries","LoginListItem","LogoutListItem","setUserData","ProfileIcon","user","initialFirst","firstname","initialSecond","lastname","Logo","ind","cssClass","pathname","CartSvg","count","calcCartItemNum","Credits","href","CartInformation","state","toggleItems","arrowCss","totalCartItems","totalPrice","array","this","totalAmount","toggleList","document","getElementById","style","height","scrollHeight","setState","handleToggle","calcPrice","calcTotalCartItems","Component","LoginForm","customerData","handleChange","bind","setCustomerData","isCheckout","history","push","e","field","target","name","value","onSubmit","handleSubmit","type","defaultValue","onChange","required","email","address","zip","iban","bic","handleCancel","ThankYou","setNavbarIsVisible","setProdIdsInCartList","setTimeout","navbarIsVisible","includeCustomerName","App","useState","ProductData","setProductData","prodIdsInCartList","increaseItemAmountInCart","decreaseItemAmountInCart","prodIndex","indexOf","splice","removeFromListOfProdIds","removeId","newCartList","indexInCartList","itemWithAmount","concat","addToListOfProdIds","increaseAmountItem","newAmount","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5260c01b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ProductCard.css\";\r\n\r\n// Using object destructuring on the props object for convenience\r\nconst ProductCard = ({ item, addToCartHandler }) => {\r\n  //########## Functions ##########\r\n\r\n  \r\n\r\n  // ########## Main ##########\r\n\r\n  return (\r\n    <div className=\"cardContainer\">\r\n      {/* Conditionally render parts of the card\r\n            TODO: Use a default picture in case a picture can't be fetched */}\r\n      <img className=\"cardImage\" src={item.imgSrc} alt=\"productImage\" />\r\n      <div className=\"cardTitle\">{item.title}</div>\r\n      {item.text && <div className=\"cardBody\">{item.text}</div>}\r\n      <div className=\"price\">{item.price.toFixed(2)} €</div>\r\n      <button\r\n        className=\"addToCart\"\r\n        onClick={() => addToCartHandler(item)}\r\n      >\r\n        Add to Cart\r\n      </button>\r\n\r\n      {item.footer && <div className=\"cardFooter\">{item.footer}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react'\r\n\r\nimport './ProductList.css'\r\nimport ProductCard from './ProductCard'\r\n\r\nconst ProductList = (props) => {\r\n    \r\n    return (\r\n      <div className=\"displayContainer\">\r\n        <div className=\"productsGrid\">\r\n          {\r\n            // Load the product items from the data and populate cards with them\r\n\r\n            props.productData.items.map((item) => {\r\n              return (\r\n                <ProductCard\r\n                  key={item.id}\r\n                  className=\"card\"\r\n                  addToCartHandler={props.addToCartHandler}\r\n                  item={item}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProductList;","export default __webpack_public_path__ + \"static/media/trash-alt-regular.705a001f.svg\";","import React from \"react\";\r\n\r\nimport \"./CartProductView.css\";\r\nimport TrashCan from '../../Assets/trash-alt-regular.svg';\r\n\r\nconst CartProductView = ({ item, increaseItemAmount, decreaseItemAmount }) => {\r\n  \r\n  // ############ Main ############\r\n  return (\r\n    <div className=\"cartItemCard\">\r\n      <img className=\"cartItemImage\" src={item.imgSrc} alt=\"productImage\" />\r\n\r\n      <div className=\"cartItemDescription\">\r\n        <div className=\"cartItemTitle\">{item.title}</div>\r\n        <div className=\"cartItemText\">{item.text}</div>\r\n        <div className=\"cartItemPrice\">{item.price.toFixed(2)} €</div>\r\n      </div>\r\n\r\n      <span className=\"amountSpanContainer\">\r\n        <div className=\"amountDescriber\"> Amount: </div>\r\n        <span className=\"amountCounterSpan\">\r\n          <button\r\n            className=\"decreaseAmount\"\r\n            onClick={() => decreaseItemAmount(item)}\r\n          >\r\n            {item.amount === 1 ? <img src={TrashCan} alt=\"Trash Can\"/> : \"-\" }\r\n          </button>\r\n          <div className=\"amountNum\"> {item.amount} </div>\r\n          <button\r\n            className=\"increaseAmount\"\r\n            onClick={() => increaseItemAmount(item)}\r\n          >\r\n            +\r\n          </button>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartProductView;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport CartProductView from \"./CartProductView\";\r\n\r\nimport \"./Cart.css\";\r\n\r\nconst Cart = ({\r\n  cartList,\r\n  setCartList,\r\n  increaseItemAmount,\r\n  decreaseItemAmount,\r\n}) => {\r\n  // ########## Functions ##########\r\n  \r\n  const calcTotalPrice = (list) =>{\r\n    let total = 0;\r\n    list.forEach((item) => {\r\n      total += item.amount * item.price\r\n    })\r\n    return total.toFixed(2);\r\n  }\r\n  \r\n  \r\n  // ########## Main ##########\r\n\r\n  const TotalAndCheckout = () => {\r\n    return (\r\n      <div className=\"grandTotalLayout\">\r\n          <Link to=\"/checkout\" className=\"checkoutLink link\">\r\n            <div className=\"checkoutText\">Checkout</div>\r\n          </Link>\r\n          <div className=\"grandTotal\">\r\n            <div className=\"grandTotalDescriber\">Grand total:</div>\r\n            <div className=\"grandTotalNumber\">{calcTotalPrice(cartList)} €</div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"cartListContainer\">\r\n\r\n      {cartList.length === 0 && ( // Show if the cart is empty\r\n        <div className=\"noCartContentLayout\">\r\n          <h1>There is nothing in here.😅</h1>\r\n          <h2> You can add items from the products page.</h2>\r\n        </div>\r\n      )}\r\n\r\n      {cartList.length !== 0 && <TotalAndCheckout /> /* Display the total value of the cart if there are items in the cart */} \r\n\r\n      <ul className=\"cartList\">\r\n        {cartList.map((item) => {\r\n\r\n          return (\r\n            <li key={item.id} className=\"cartItem\">\r\n              <CartProductView\r\n                item={item}\r\n                cartItems={cartList}\r\n                setCartItems={setCartList}\r\n                increaseItemAmount={increaseItemAmount}\r\n                decreaseItemAmount={decreaseItemAmount}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      {cartList.length >= 5 && <TotalAndCheckout /> /* Display checkout and amount at the end of cart if there are many items in the list */}\r\n      <br/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","const NavbarItems = [\r\n    { text: \"Products\", urlPath: \"/\" },\r\n    { text: \"Cart\", urlPath: \"/cart\" },\r\n    { text: \"Credits\", urlPath: \"/credits\" },\r\n  ];\r\n\r\nexport default NavbarItems;","export default __webpack_public_path__ + \"static/media/shopping-basket-solid.cd99bf60.svg\";","export default __webpack_public_path__ + \"static/media/round.74739fdf.svg\";","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport './Navbar.css'\r\nimport NavbarItems from './NavbarItems';\r\nimport CartSvg from '../../Assets/shopping-basket-solid.svg';\r\nimport Logo from '../../Assets/round.svg';\r\n\r\nconst Navbar = ({ cartList, customer, setCustomer }) => {\r\n  // ######## Functions ########\r\n  // Use location hook, to get the current URL path\r\n  const location = useLocation();\r\n  \r\n  const calcCartItemNum = (list) => {\r\n    let count = 0;\r\n    list.forEach((item) => {\r\n      count += item.amount;\r\n    })\r\n    return count;\r\n  }\r\n\r\n  const isLoggedIn = (person) => {\r\n    if (Object.entries(person).length === 0) { // If there are no entries in person\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n    \r\n  // ######## Main ########\r\n  const LoginListItem = () => {\r\n    return (\r\n      <li className=\"navItemRightMenu\">\r\n        <Link to=\"/login\" className=\"link loginLogout\">\r\n          <div className=\"loginLogoutText\">Login</div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  const LogoutListItem = ({ setUserData }) => {\r\n    return (\r\n      <li className=\"navItemRightMenu\">\r\n        <div className=\"loginLogout\" onClick={() => setUserData({})}>\r\n          <div className=\"loginLogoutText\">Logout</div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  const ProfileIcon = ({ user }) => {\r\n    let initialFirst = user.firstname[0];\r\n    let initialSecond = user.lastname[0];\r\n\r\n    return (\r\n      <li className=\"navItemRightMenu\">\r\n        <Link to=\"/login\" className=\"profileIcon\">\r\n          <div className=\"profileInitials\">\r\n          {`${initialFirst}${initialSecond}`}\r\n          </div>\r\n        </Link>\r\n      </li>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbarContainer\">\r\n      <Link to=\"/\" className=\"link\">\r\n        <img className=\"logo\" src={Logo} />\r\n        <div className=\"logoText\">Rounderful</div>\r\n      </Link>\r\n\r\n      {/* Menu on the left side of the Navbar; Data is dynamically loaded */}\r\n      <ul className=\"leftMenu\">\r\n        {NavbarItems.map((item, ind) => {\r\n          // Check which CSS classes apply for the navbar element\r\n          const cssClass = `navItemLeftMenu ${\r\n            item.urlPath === location.pathname ? `active` : ``\r\n          }`;\r\n\r\n          return (\r\n            // Add the 'active' CSS class to a nav item if it represents the current path\r\n            <li key={ind} className={cssClass}>\r\n              <Link to={item.urlPath} className=\"link\">\r\n                <div className=\"navItemLeftMenuText\">{item.text}</div>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <ul className=\"rightMenu\">\r\n        {isLoggedIn(customer) && <ProfileIcon user={customer} />}\r\n        {isLoggedIn(customer) ? <LogoutListItem setUserData={setCustomer} /> : <LoginListItem />}\r\n\r\n        <li className=\"navItemRightMenu\">\r\n          <Link to=\"/cart\" className=\"link\">\r\n            <img className=\"cartImg\" src={CartSvg} alt=\"cart\" />\r\n            {/* TODO: Render this div only if there is an item in the cart and update the number of items shown in the pill */}\r\n            <div className=\"numCartItems\">{calcCartItemNum(cartList)}</div>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nimport \"./Credits.css\";\r\n\r\nconst Credits = () => {\r\n  return (\r\n    <div className=\"creditsContainer\">\r\n      <h1 className=\"creditsHeading\">Credit goes to:</h1>\r\n      <ol className=\"creditsList\">\r\n        <li className=\"creditsItem\">\r\n          <div>\r\n            The rounded logo icon is made by{\" \"}\r\n            <a href=\"http://www.freepik.com\" title=\"Freepik\">\r\n              Freepik\r\n            </a>{\" \"}\r\n            from{\" \"}\r\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n              www.flaticon.com\r\n            </a>\r\n          </div>\r\n        </li>\r\n        <li className=\"creditsItem\">\r\n          <div>\r\n            {\" \"}\r\n            Credit for the cart icon goes to Font Awesome under{\" \"}\r\n            <a href=\"https://fontawesome.com/license\">\r\n              Creative Commons Attribution 4.0 International license\r\n            </a>\r\n            .<br />\r\n            It was modified to appear white instead of black.\r\n          </div>\r\n        </li>\r\n        <li className=\"creditsItem\">\r\n          <div>\r\n            The images in the product cards are fetched from{\" \"}\r\n            <a href=\"https://unsplash.com\">www.unsplash.com</a>\r\n          </div>\r\n        </li>\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import { Component } from 'react';\r\n\r\nimport './CartInformation.css'\r\nexport default class CartInformation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {toggleItems: false};\r\n        this.arrowCss = \"arrow down\";\r\n        this.totalCartItems = null;\r\n        this.totalPrice = null;\r\n    }\r\n\r\n    calcPrice(array) {\r\n        if(this.totalPrice) {\r\n            return this.totalPrice;\r\n        } else {\r\n          let price = 0;\r\n          array.forEach((item) => {\r\n            price += item.amount * item.price;\r\n          });\r\n          return price.toFixed(2);\r\n        }\r\n    }\r\n\r\n    calcTotalCartItems(array) {\r\n        if (this.totalCartItems) {\r\n            return this.totalCartItems;\r\n        } else {\r\n            let totalAmount = 0;\r\n          array.forEach((item) => {\r\n            totalAmount += item.amount;\r\n          });\r\n          return totalAmount;\r\n        }\r\n    }\r\n\r\n    handleToggle() {\r\n        this.arrowCss = `arrow ${!this.state.toggleItems ? 'up' : 'down'}`\r\n        let toggleList = document.getElementById(\"cartItemsList\");\r\n        \r\n        // How to toggle visibility of items in a list: https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_accordion_animate\r\n        if(toggleList.style.height){\r\n            toggleList.style.height = null;\r\n        } else {\r\n            toggleList.style.height = toggleList.scrollHeight + \"px\";\r\n        }\r\n        \r\n        this.setState({toggleItems: !this.state.toggleItems})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"cartInformationLayout\">\r\n            <div className=\"cartPriceLayout\">\r\n              <div className=\"cartDescriber\">Cart Value</div>\r\n\r\n              <button\r\n                className=\"collapseToggleCartItems\"\r\n                onClick={() => this.handleToggle()}\r\n              >\r\n                <div className=\"cartItemsDescriber\">Details</div>\r\n                <i className={this.arrowCss} />\r\n              </button>\r\n\r\n              <div className=\"cartPrice\">\r\n                {this.calcPrice(this.props.cartList)} €\r\n              </div>\r\n            </div>\r\n\r\n            <div id=\"cartItemsList\">\r\n              <div className=\"cartItemsLegend\">\r\n                <div>Amount</div>\r\n                <div>Description</div>\r\n                <div>Total Price</div>\r\n              </div>\r\n              <hr />\r\n\r\n              {this.props.cartList.map((item) => {\r\n                return (\r\n                  <div className=\"cartListItem\" key={item.id}>\r\n                    <div className=\"cartItemsAmount\">{item.amount} x </div>\r\n                    <div className=\"cartItemsDescription\">\r\n                      {item.title}\r\n                      <div className=\"cartItemsPrice\">{item.price} €</div>\r\n                    </div>\r\n                    <div className=\"cartItemsTotalPrice\">\r\n                      {(item.amount * item.price).toFixed(2)} €\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              <hr />\r\n              <div className=\"cartItemsResult\">\r\n                <div>{this.calcTotalCartItems(this.props.cartList)} Item(s)</div>\r\n                <div>{this.calcPrice(this.props.cartList)} €</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CartInformation from './CartInformation';\r\n\r\nimport './LoginForm.css'\r\n\r\nexport default class LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customer: {\r\n                ...props.customerData\r\n            }\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    // ######### Functions ##########\r\n    handleSubmit(){\r\n        // Set customer data in super state\r\n        this.props.setCustomerData(this.state.customer);\r\n\r\n        if (this.props.isCheckout) {\r\n            // redirect to thank you page\r\n            this.props.history.push(\"/thankyou\")\r\n        } else {\r\n            // redirect to products page\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    handleCancel(){\r\n      this.props.history.push(\"/cart\");\r\n    }\r\n\r\n    handleChange(e){\r\n        let field = e.target.name; // name of the input field\r\n        let value = e.target.value; // value entered into that field\r\n\r\n        // Modify the customer data in state by adding new user input\r\n        this.setState({\r\n          customer: {\r\n            ...this.state.customer,\r\n            [field]: value,\r\n          },\r\n        });\r\n    }\r\n\r\n\r\n    // ########## Main ##########\r\n    \r\n    render() {\r\n        return (\r\n          <div className=\"loginFormContainer\">\r\n            {/* Only render information about the cart if we are about to checkout */}\r\n            {this.props.isCheckout && <CartInformation {...this.props} />}\r\n\r\n            <form onSubmit={() => this.handleSubmit()}>\r\n              <div className=\"loginFormLayout\">\r\n                <div className=\"formHeadlineLayout\">\r\n                  <h4 className=\"formHeadline\">General Information</h4>\r\n                  <hr className=\"formSection\" />\r\n                </div>\r\n\r\n                <label>\r\n                  First Name\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"fName\"\r\n                    name=\"firstname\"\r\n                    defaultValue={this.state.customer.firstname}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Last Name\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"lName\"\r\n                    name=\"lastname\"\r\n                    defaultValue={this.state.customer.lastname}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  E-Mail\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"email\"\r\n                    name=\"email\"\r\n                    defaultValue={this.state.customer.email}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Address\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"address\"\r\n                    name=\"address\"\r\n                    defaultValue={this.state.customer.address}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Zip Code\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"zip\"\r\n                    name=\"zip\"\r\n                    defaultValue={this.state.customer.zip}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </label>\r\n\r\n                { /* Show payment form only if the customer checks out */\r\n                this.props.isCheckout && (\r\n                  <>\r\n                    <div className=\"formHeadlineLayout\">\r\n                      <h4 className=\"formHeadline\">\r\n                        Payment (please don't enter real bank information)\r\n                      </h4>\r\n                      <hr className=\"formSection\" />\r\n                    </div>\r\n                    <label>\r\n                      IBAN\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"iban\"\r\n                        name=\"iban\"\r\n                        defaultValue={this.state.customer.iban}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </label>\r\n                    <label>\r\n                      BIC (Swift Code)\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"bic\"\r\n                        name=\"bic\"\r\n                        defaultValue={this.state.customer.bic}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                      />\r\n                    </label>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"buttonLayout\">\r\n                <button className=\"button cancel\" type=\"button\" onClick={() => this.handleCancel()}>Cancel</button>\r\n                <button type=\"submit\" className=\"button submit\">\r\n                  {this.props.isCheckout ? \"Confirm & Checkout\" : \"Login\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport './ThankYou.css'\r\n\r\nexport default class ThankYou extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: props.customer.firstname,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        // Hide the NavBar initially\r\n        this.props.setNavbarIsVisible(false);\r\n\r\n        /* Delete session data and redirect to home page.\r\n\r\n        Also check if it wasn't deleted already, \r\n        because every state change also causes this component to remount.\r\n        That means if the cartList has no item in it, it was reset already \r\n        and the code doesn't need to be executed again */\r\n        if (this.props.cartList[0]) {\r\n          // Delete Session data if it wasn't reset already\r\n          this.props.setCartList([]);\r\n          this.props.setProdIdsInCartList([]);\r\n          this.props.setCustomerData({});\r\n\r\n          // After a few seconds redirect to homepage\r\n          setTimeout(() => {\r\n            this.props.history.push(\"/\");\r\n          }, 6000);\r\n        } \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Display the navbar again, if it isn't already \r\n        if (this.props.navbarIsVisible === false) {\r\n            this.props.setNavbarIsVisible(true);  \r\n        }\r\n    }\r\n    \r\n    includeCustomerName() {\r\n        if (this.state.name) {\r\n            return `, ${this.state.name}`\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"thanksLayout\">\r\n                <h1 className=\"thanksTitle\">Thank you for your purchase at Rounderful{this.includeCustomerName()} 😀</h1>\r\n                <h2 className=\"thanksDelivery\">Your delivery will arrive within the next 2 - 3 workdays 🚚</h2>\r\n                <h3 className=\"thanksLogout\">You will be logged out automatically.</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState} from 'react';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\n\nimport ProductData from './Data/ShopItems.json';\nimport ProductList from './Components/ProductList/ProductList';\nimport Cart from './Components/Cart/Cart'\nimport Navbar from './Components/Navbar/Navbar';\nimport Credits from './Components/Credits/Credits';\nimport LoginForm from './Components/LoginForm/LoginForm'\nimport './App.css';\nimport ThankYou from './Components/ThankYou/ThankYou';\n\nfunction App() {\n\n  // Save data in state and make it accessable to all child processes via props\n  // Data about tht products. Usually this data would come from a backendserver.\n  const [productData, setProductData] = useState(ProductData);\n\n  // Save the items in the cart here\n  const [cartList, setCartList] = useState([]);\n\n  // Save a list of the product ids here. \n  // It is used to keep track of the individual products and their position in cartList.\n  const [prodIdsInCartList, setProdIdsInCartList] = useState([]);\n\n  // Save the customer data after they login\n  const [customer, setCustomer] = useState({});\n\n  // Boolean that indicates if the navbar should be hidden\n  const [navbarIsVisible, setNavbarIsVisible] = useState(true);\n\n\n  // ########## Functions ##########\n  const increaseItemAmountInCart = (item) => {\n    item.amount = item.amount + 1;\n    // Create a copy (call by value) of the updated cartList and update the state with the new list\n    setCartList([...cartList]) \n  };\n\n  const decreaseItemAmountInCart = (item) => {\n    item.amount = item.amount - 1;\n    // delete an item if its amount is 0\n    if (item.amount <= 0 ){\n      let prodIndex = prodIdsInCartList.indexOf(item.id);\n      cartList.splice(prodIndex, 1); \n      removeFromListOfProdIds(item);\n    }\n    // Create a copy (call by value) of the updated cartList and update the state with the new list\n    setCartList([...cartList]) \n  };\n\n  const addToListOfProdIds = (item) => {\n    /* Set the list that contains all product ids in cartList */ \n    prodIdsInCartList.push(item.id);\n    setProdIdsInCartList([...prodIdsInCartList]);\n  };\n\n  const removeFromListOfProdIds = (item) => {\n    let removeId = prodIdsInCartList.indexOf(item.id);\n    prodIdsInCartList.splice(removeId, 1);\n    setProdIdsInCartList([...prodIdsInCartList]);\n  }\n  \n  const addToCartHandler = (item) => {\n    /* Adds the item to the cartList and updates the state */\n\n    // If the productId is not in the cart, append that item to the cart list\n    var newCartList = []; // variable in function scope\n    let indexInCartList = prodIdsInCartList.indexOf(item.id);\n\n    if (indexInCartList === -1) { //This means that the id isn't in the cart list\n    let itemWithAmount = {...item, amount: 1};\n    newCartList = cartList.concat(itemWithAmount);\n    addToListOfProdIds(item);\n    } \n    // If the productId is already in the cart, increase the amount of that item\n    else {\n      let increaseAmountItem = cartList[indexInCartList];\n      let newAmount = increaseAmountItem.amount + 1;\n      increaseAmountItem = {...increaseAmountItem, amount: newAmount}\n      // change the old item in cart with the updated item that holds the new amount\n      cartList[indexInCartList] = increaseAmountItem;\n      newCartList = [...cartList];\n    }\n    setCartList(newCartList);\n  };\n\n\n  // ########## Main ##########\n  return (\n    <>\n      <BrowserRouter>\n        {navbarIsVisible && ( // Check if the Navbar should be hidden or not\n          <Navbar\n            cartList={cartList}\n            customer={customer}\n            setCustomer={setCustomer}\n          />\n        )}\n\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={(props) => (\n              <ProductList\n                productData={productData}\n                setProductData={setProductData}\n                cartList={cartList}\n                setCartList={setCartList}\n                addToCartHandler={addToCartHandler}\n                {...props}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/cart\"\n            exact\n            component={(props) => (\n              <Cart\n                cartList={cartList}\n                setCartList={setCartList}\n                increaseItemAmount={increaseItemAmountInCart}\n                decreaseItemAmount={decreaseItemAmountInCart}\n                {...props}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/login\"\n            exact\n            component={(props) => (\n              <LoginForm\n                customerData={customer}\n                setCustomerData={setCustomer}\n                cartList={cartList}\n                isCheckout={false}\n                {...props}\n              />\n            )}\n          />\n\n          {cartList.length !== 0 && ( // Only make the checkout accessable if there are items in the cart\n            <Route\n              path=\"/checkout\"\n              exact\n              component={(props) => (\n                <LoginForm\n                  customerData={customer}\n                  setCustomerData={setCustomer}\n                  cartList={cartList}\n                  isCheckout={true}\n                  {...props}\n                />\n              )}\n            />\n          )}\n\n          <Route path=\"/credits\" exact component={Credits} />\n\n          <Route\n            path=\"/thankyou\"\n            exact\n            component={(props) => (\n              <ThankYou\n                customer={customer}\n                setCustomerData={setCustomer}\n                cartList={cartList}\n                setCartList={setCartList}\n                prodIdsInCartList={prodIdsInCartList}\n                setProdIdsInCartList={setProdIdsInCartList}\n                navbarIsVisible={navbarIsVisible}\n                setNavbarIsVisible={setNavbarIsVisible}\n                {...props}\n              />\n            )}\n          />\n\n          {/* This is the path github pages uses as an entry point. \n              To use the website, the user is redirected to the usual homepage of the SPA */}\n          <Route\n            path=\"/online_shop_3_semester/\"\n            component={() => <Redirect to=\"/\" />}\n          />\n\n          <Route\n            path=\"/:404\"\n            component={() => <h1>HTTP Error 404: Not found</h1>}\n          />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}